// This macro loads stained images from a folder and automatically binarizes them using the given threshold
//
//	Created by: R. Pedrigi, 2020


filebase1 = "M001L";
filebase2 = "Binary_";
dirstr = ""
for (j=1;j<=50;j++) {
	
	if (j<11){
		sec = "_PSR_SI";
		k = j;
	}
	if (j>10 && j<21){
		sec = "_PSR_SII";
		k = j-10;
	}
	if (j>20 && j<31){
		sec = "_PSR_SIII";
		k = j-20;
	}
	if (j>30 && j<41){
		sec = "_PSR_SIV";
		k = j-30;
	}
	if (j>40 && j<51){
		sec = "_PSR_SV";
		k = j-40;
	}

	if (k<10) {		
		filename = "_0";	
	} else {
		filename = "_";
	}
	open(dirstr+filebase1+sec+filename+k+".tif");

run("Color Threshold...");
// Color Thresholder 1.53e
// Autogenerated macro, single images only!
min=newArray(3);
max=newArray(3);
filter=newArray(3);
a=getTitle();
run("HSB Stack");
run("Convert Stack to Images");
selectWindow("Hue");
rename("0");
selectWindow("Saturation");
rename("1");
selectWindow("Brightness");
rename("2");
min[0]=51;
max[0]=135;
filter[0]="pass";
min[1]=0;
max[1]=255;
filter[1]="pass";
min[2]=60;
max[2]=255;
filter[2]="pass";
for (i=0;i<3;i++){
  selectWindow(""+i);
  setThreshold(min[i], max[i]);
  run("Convert to Mask");
  if (filter[i]=="stop")  run("Invert");
}
imageCalculator("AND create", "0","1");
imageCalculator("AND create", "Result of 0","2");
for (i=0;i<3;i++){
  selectWindow(""+i);
  close();
}
selectWindow("Result of 0");
close();
selectWindow("Result of Result of 0");
rename(a);
// Colour Thresholding-------------
setOption("BlackBackground", false);
run("Convert to Mask");
	
	saveAs("Tiff", dirstr+filebase2+filebase1+sec+filename+k+".tif");	
	close();
}
